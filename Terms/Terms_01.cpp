// Authors: Handling
// Created by 15870 on 2020/11/8.
// This is 视C++为一个语言联邦

/* C++是一个多重范型编程语言（Multiparadigm programing language）
 * 1. 支持过程形式
 * 2. 面向对象形式
 * 3. 函数形式
 * 4，泛型形式
 * 5. 元编程形式
 *
 * 我们理解其C++时应该视其为 一个相关语言组成的联邦（有4个次语言）
 * 1. C：对于C++问题的解法类似C的高级解法时，高效的解法就是去映射C语言的规范，不要掺杂过多C++其他此语言特性
 * 2. Object-Oriented C++: 这部分即 C With Class，C++的主流编程
 * 3. Template C++： 十分强大的模板编程范式
 * 4. STL 模板库： STL 对于容器迭代器算法函数对象等等的规约有极佳的紧密配合与协调，伙同STL进行开发，要
 * 遵循其规约
 *
 * C++对于该4个次语言都有它自己的规约， 记住这4个次语言你就会发现C++容易了解的多
 *
 * 建议： C++高校编程守则视情况而变化，取决于你使用C++的哪一个部分。
 */


